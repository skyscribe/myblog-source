---
layout: post
title: "The productive Programmer - 笔记"
date: 2013-08-06 20:24
comments: true
categories: [reading, programming, tools, tips]
---

这是一本关于程序员生产效率的书，作者来自于Thought Works - 很多人一听到这个公司的名字就会在头脑中联系到敏捷/布道师这样的角色，并且可能在心里暗暗的寻思，又是一个光说不练的家伙在传播他们的理论了。但是仔细读来，才会发现这本书其实和敏捷并没有太大关联，讲述的也是一些实实在在的建议和实践。

<!--more-->

## 不要敏捷，只要消除浪费

这句话摘自译者的序言中，简单明了的概括了这本书主要解决的问题 - 消除开发中的浪费行为，提高生产效率。作为一个程序员，你需要从什么地方来提高自己的生产率，消除浪费，并不是每个人都仔细想过这个问题；所以优秀的程序员才可以比平庸的程序员效率差异极大。当然提高效率的想法很简单，但是真正去做到实处，却是很难的，因为这需要不放过**没有细微的地方**，发现浪费和降低生产率的做法，然后设法一点一滴提高。关注于每一个细节，对细节进行持续优化，通过对细节的改善来最终提高生产效率，这是个人工作方法上的敏捷，最终会取得个人工作效率上的持续提升。

这本书对我而言最右价值的部分是关于Windows上的效率提升建议，讲述了很多实用的工具和方法。至于Linux上的，那些关于命令行和脚本的章节，早就受惠已久了所以自然没感觉到大的思路更新。

## 启动面板和加载器

Linux的Unity是这方面很好的例子，让你可以脱离鼠标仅仅通过几个快捷键转瞬之间打开常用的引用，定制什么的也比较简单。Windows就没这么好用了，或者说大部分人都没有仔细去查阅如何来用键盘来实现类似的高效率。作者推荐了如下一些方式:

- 开始菜单之中创建一个启动面板，将常用的程序放进去，重命名快捷方式，使得每个程序的首字母一样，然后通过**Windows+x**来启动，这里的字符就是重命名之后的程序名字的首字母
- Windows的Power tools工具集，包括Tweak UI，可以用图形方式修改注册表
- 快速启动栏的程序，可以通过**Windows+1**的方式启动程序，不过最多可以启动10个 

### 地址栏加速

地址栏可以在当前路径的后边，输入一部份然后利用**Tab**来补全剩余的；这个在当前目录里边有很多文件的时候尤其有用，可以减少很多鼠标点击和肉眼扫描。

### 命令行提示符

可以在当前目录打开命令行，只需要安装**Command Prompt Explorer Bar**这个开源工具，就可以用**Ctrl-M**打开一个附着于资源管理器底部的命令提示符。当上边的资源管理器目录发生变化之后，底下的命令提示符目录也随之发生变化。

Windows PowerToys的系列工具之一可以再右键菜单上加入“当前目录打开命令提示符”的子菜单，这样就可以简单的在当前目录打开一个命令窗口。

### 键盘宏工具

用宏来录制常用的键盘操作组合是个很好的做法，可以看看Windows流行的**AutoHotKey**。

## 专注

下边的策略可以有效的排除干扰，专注于当前的工作：

- 隔离策略，关闭不必要的提醒/邮件/手机等
- 关闭操作系统的气泡提示
- 为团队规定一段安静时间，除非特殊情况，任何人不要干扰

### Windows的有根视图

就是一种以某个子目录为文件结构根目录的做法；从中可以看到这个子目录的内容，但是不需要关心其它目录的内容。可以用如下的方式打开有根视图:
``` bash
explorer /e,/root,c:\work\cit
```

这种方式只在打开的资源浏览器里边有效。另外一种办法是，在WIN7中为常用的目录创建Library。

### 使用虚拟桌面切分窗口

可以使用Windows PowerToys里边的Virtual Desktop Manager打开多个桌面。每个桌面会有自己的快速启动栏，热键；并且可以同时打开所有桌面。这个是从Unix那边借鉴过来的特性，也没太多可说。


